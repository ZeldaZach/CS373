#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
theorems-ams-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Zachary Halpern â€“ Homework #2
\end_layout

\begin_layout Example*
1.15: Give a counterexample to show that the following constructions fails
 to prove THM 1.49:
\end_layout

\begin_layout Example*
If we have 
\begin_inset Formula $N_{1}$
\end_inset

 be an NFA that accepts no strings in its language.
 Based on the wording, the start state of 
\begin_inset Formula $N$
\end_inset

 is now an accept state.
\end_layout

\begin_layout Example*
Hence forth, for example, if 
\begin_inset Formula $w=010$
\end_inset

 over the language 
\begin_inset Formula $\{0,1\}$
\end_inset

, and w does not end in an accept state...
 N will accept this string, which is not how the star operation works.
\end_layout

\begin_layout Example*
The star operation of the language of 
\begin_inset Formula $N_{1}$
\end_inset

 is purely 
\begin_inset Formula $\epsilon.$
\end_inset

 The example given above shows that the string 
\begin_inset Formula $010$
\end_inset

 will be accepted, which should not happen.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example*
1.31: For any string w = w1...wn, ...
 show that if A is regular, so is the reverse, A^R.
\end_layout

\begin_layout Proof
Define 
\begin_inset Formula $N$
\end_inset

 as 
\begin_inset Formula $(Q_{0},\Sigma,\delta_{0},q_{0},f_{0})$
\end_inset

 and define 
\begin_inset Formula $N_{R}$
\end_inset

 as 
\begin_inset Formula $(Q_{1},\Sigma,\delta_{1},q_{1},f_{1})$
\end_inset

 such that 
\begin_inset Formula $N_{R}$
\end_inset

 accepts the reverse of N.
\end_layout

\begin_layout Proof
\begin_inset Formula $Q_{1}=q_{o}\cup Q_{0}$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula $\delta_{1}=$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula $q_{1}=$
\end_inset

 new start state
\end_layout

\begin_layout Proof
\begin_inset Formula $f_{1}=q_{0}$
\end_inset


\end_layout

\begin_layout Proof
We need to show that there exists a path from the new start state (
\begin_inset Formula $q_{1})$
\end_inset

 to the initial start state (
\begin_inset Formula $q_{0})$
\end_inset

 if there was a path from 
\begin_inset Formula $q_{0}$
\end_inset

 to f in the intiial N.
\end_layout

\begin_layout Proof
First, take the start state of N and turn it into an accept state.
\end_layout

\begin_layout Proof
Next, change the direction of the arrows for the entire FA of N.
\end_layout

\begin_layout Proof
Next, Change all prior accept states to transition states.
\end_layout

\begin_layout Proof
Finally, add a new start state and connect it by epsilon transitions to
 the states that do not have an input to get to them.
\end_layout

\begin_layout Proof
This will allow the new string to 
\begin_inset Quotes eld
\end_inset

start
\begin_inset Quotes erd
\end_inset

 at the prior accept states and they have to get to the initial start state
 of N in order to be accepted.
\end_layout

\begin_layout Section
Class Review
\end_layout

\begin_layout Example*
Prove 
\begin_inset Formula $2^{n}<n!\forall n>3$
\end_inset

 
\end_layout

\begin_layout Proof
Proof by induction.
\end_layout

\begin_layout Proof
Base: n = 4
\end_layout

\begin_layout Proof
\begin_inset Formula $2^{4}=16,4!=24$
\end_inset

 which is true.
\end_layout

\begin_layout Proof
Induction case: Assume 
\begin_inset Formula $\exists k>3$
\end_inset

 st 
\begin_inset Formula $2^{k}<k!$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula $2^{k+1}=2*2^{k}<2k!<(k+1)k!=(k+1)!$
\end_inset


\end_layout

\begin_layout Example*
\begin_inset Formula $n^{n}>n!\forall n>1$
\end_inset


\end_layout

\begin_layout Proof
Proof by induction.
\end_layout

\begin_layout Proof
Base n = 2
\end_layout

\begin_layout Proof
\begin_inset Formula $2^{2}=4,2!=2$
\end_inset

 which is true.
\end_layout

\begin_layout Proof
Induction case: Assume 
\begin_inset Formula $\exists k>1$
\end_inset

 st 
\begin_inset Formula $k^{k}>k!$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula $(k+1)^{(k+1)}=(k+1)(k+1)^{k}>(k+1)k^{k}>(k+1)k!=(k+1)!$
\end_inset


\end_layout

\begin_layout Example*
1.15: Give counter example that shows this construction doesn't work to prove
 closure under star (*).
\end_layout

\begin_layout Example*
\begin_inset Formula $N_{1}=(Q,\Sigma\delta,q,F)$
\end_inset

 recognizes A.
\end_layout

\begin_layout Example*
Construction 
\begin_inset Formula $N=(Q,\Sigma,\delta,q,F)$
\end_inset

 where
\end_layout

\begin_layout Example*
\begin_inset Formula $F=\{q_{1}\}\cup\{F_{1}\}$
\end_inset


\end_layout

\begin_layout Example*
\begin_inset Formula $\delta(q,a)=\{\{\delta_{1}(q,a)\}$
\end_inset

 if 
\begin_inset Formula $q\not\in F_{1},a\in\epsilon$
\end_inset


\end_layout

\begin_layout Example*
\begin_inset Formula $=\{\{\delta_{1}(q,a)\}\cup\{q_{1}\}$
\end_inset

 if 
\begin_inset Formula $q\in F_{1},a=\epsilon$
\end_inset


\end_layout

\begin_layout Example*
In notebook.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example*
w = w1w2...wn wR = wnwn-1...w2w1.
 If A is a language, AR is a language.
\end_layout

\begin_layout Proof
If A is RL, then 
\begin_inset Formula $A^{R}$
\end_inset

 is RL.
\end_layout

\begin_layout Proof
Let A be a RL where DFA 
\begin_inset Formula $M=(Q,\Sigma,\delta_{M},q_{M},F)$
\end_inset

 recognizes A.
\end_layout

\begin_layout Proof
Construct NFA 
\begin_inset Formula $N=(Q\cup\{q_{s}\},\Sigma,\delta_{N},q_{s},\{q_{m}\})$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula $\delta_{N}(q,a)=\begin{cases}
\{\delta_{M}(p,a)\}=q & q\in Q\end{cases}\begin{cases}
F & q=q_{s},a=\epsilon\end{cases}$
\end_inset


\end_layout

\end_body
\end_document
